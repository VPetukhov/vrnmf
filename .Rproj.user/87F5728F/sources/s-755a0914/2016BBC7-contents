rate.norm <- (apply(rate.new,2,function(x) (x)/sd(x) ))
#rate.norm <- (apply(rate.prox,2,function(x) (x)/sum(x) ))

P0 <- t(as.matrix(rate.norm))%*%as.matrix(rate.norm)


AnchorFree.old <- function(P0,n.reduce=n.comp,n.comp = 3,init=NULL,init.type="unif.both",n.iter=30){
  P <- P0/max((P0)) # how to normalize P to avoid inf problems?
  dimr <- svd(P)
  #range(dimr$d); head(dimr$d,7)
  
  Pclean <- dimr$u[,1:n.reduce]%*%diag(dimr$d)[1:n.reduce,1:n.reduce]%*%t(dimr$v[,1:n.reduce])
  B <- -dimr$u[,1:n.reduce]%*%sqrt(diag(dimr$d)[1:n.reduce,1:n.comp])
  
  M <- init
  if (is.null(M)){
    if (init.type=="diag"){
      M <- diag( runif(n.comp,-1,1)  ,n.comp)
    }else if (init.type=="similar"){
      M <- matrix(runif(n.comp*n.comp,0.9,1.1),nrow = n.comp, ncol=n.comp) 
    }else if (init.type=="unif.pos"){
      M <- matrix(runif(n.comp*n.comp,0,1),nrow = n.comp, ncol=n.comp) 
    }else if (init.type=="unif.both"){
      M <- matrix(runif(n.comp*n.comp,-1,1),nrow = n.comp, ncol=n.comp) 
    }else if (init.type=="normal"){
      M <- matrix(rnorm(n.comp*n.comp,0,1),nrow = n.comp, ncol=n.comp) 
    }else if (init.type=="ica" | init.type=="ica.pos"){
      ic <- ica::icafast((B), nc = n.comp, fun = fun)
      icM <- t(t(ic$S) + (t(solve(t(ic$M))) %*% apply(B, 2, mean))[,1])
      #rownames(icM) <- colnames(t)
      #icS <- t(ic$M)
      sgn <- (apply(icM,2,function(x) sign(sum(sign(x)*x^2)) ))
      icM <- t(t(icM)*sgn)
      #icS <- icS*sgn
      #str(icM%*%icS); str(B)
      if (init.type=="ica.pos"){ icM[icM < 0] <- 0 }
      ft <- lm( icM ~ B - 1 )
      M <- ft$coefficients
    }else if (init.type=="Epos"){
      #M <- matrix(runif(n.comp*n.comp,-1,1),nrow = n.comp, ncol=n.comp) 
      #svdM <- svd(M)
      #M <- svdM$u
      preE0 <- matrix(runif(n.comp*n.comp,0,1),nrow = n.comp, ncol=n.comp) 
      E0 <- preE0%*%t(preE0)
      svdE <- svd(E0)
      Mrev <- svdE$u%*%sqrt(diag(svdE$d))
      M <- solve(Mrev)
    }
  }

  M.prev <- M
  detM.prev <- det(M)
  require(lpSolveAPI)
  iter <- 1
  print(str(M))
  while ( iter < n.iter ){
    #f <- 1; k <- 1
    for (f in 1:n.comp){
      #f <- 8
      avec <- unlist(lapply(1:n.comp,function(k){
        if (n.comp==2) {detM <- M[-k,-f]}else{detM<-det(M[-k,-f])}
        Minor <- (-1)^(k+f)*detM
      }))
      Bconstr <- rbind(B, as.numeric(rep(1,nrow(B))%*%B))
      
      #x <- M[,f] # + 1e-10#/183.6
      #x <- x*1.0
      #range(Bconstr[-nrow(Bconstr),]%*%x)
      #as.numeric(rep(1,nrow(B))%*%B)%*%x
      #avec%*%x
      #avec%*%get.variables(lps1)

      lps1 <- make.lp( nrow(Bconstr), n.comp)
      lp.control(lps1,sense='max')
      for(i in 1:ncol(Bconstr)){
        set.column(lps1,i,Bconstr[,i] )
      }
      set.objfn(lps1, avec)
      set.constr.type(lps1, c(rep(">=",nrow(Bconstr)-1),"=") )
      set.rhs(lps1, c(rep(0,nrow(Bconstr)-1),1) )
      set.bounds(lps1, lower = rep(-Inf,ncol(Bconstr)), columns = 1:ncol(Bconstr))
      solve(lps1)
      #get.variables(lps1)
      #get.objective(lps1)
      #avec%*%x
      #avec%*%get.variables(lps1)
      
      lps2 <- make.lp( nrow(Bconstr), n.comp)
      lp.control(lps2,sense='min')
      for(i in 1:ncol(Bconstr)){
        set.column(lps2,i,Bconstr[,i] )
      }
      set.objfn(lps2, avec)
      set.constr.type(lps2, c(rep(">=",nrow(Bconstr)-1),"=") )
      set.rhs(lps2, c(rep(0,nrow(Bconstr)-1),1) )
      set.bounds(lps2, lower = rep(-Inf,ncol(Bconstr)), columns = 1:ncol(Bconstr))
      solve(lps2)
      #get.variables(lps2)
      #get.objective(lps2)
      
      if ( abs(get.objective(lps1)) > abs(get.objective(lps2)) ){
        M[,f] <- get.variables(lps1)
      }else{  M[,f] <- get.variables(lps2) }
      
    
      #cat( c(f,det(M)) );cat('\n')
    }

    cat( c(det(M),det(M)-detM.prev) )
    cat('\n')
    M.prev <- M
    detM.prev <- det(M)
    iter <- iter + 1
  }
 
  if ( abs(det(M)) > 1e-30 ){
    C <- B%*%M
    #rownames(C) <- colnames(rate.new)
    Ccov <- solve(t(C)%*%C)
    E <- Ccov%*%(t(C)%*%Pclean%*%C)%*%Ccov
    Ppred <- C%*%E%*%t(C)
  }else{
    C <- NA; Ccov <- NA; E <- NA; Ppred <- NA
  }

  
  return( list(C = C, E = E, Pest = Ppred, M = M, detM = det(M), init.type = init.type) )
}


smpls <- 2e+4
resl <- mclapply(1:smpls,function(jj){
  #jj <- 3
  #if (jj==1){ 
  #  init.type <- "ica"
  #}else if (jj==2){
  #  init.type <- "ica.pos"
  #}else if (jj < smpls/3){
  #  init.type <- "unif.pos"
  #}else if (jj < 2*smpls/3){
  #  init.type <- "unif.both"
  #}else if (jj <= smpls){
  #  init.type <- "normal"
  #}
  init.type <- "unif.both"
  res <- AnchorFree(P0,n.comp = 14,init=NULL,init.type=init.type,n.iter=30)
  
  return(res)
},mc.cores = 20)
 

P <- P0/max((P0)) # how to normalize P to avoid inf problems?
dn <- svd(rate.norm)
rate.svd <- dn$u[,1:n.comp]%*%diag(dn$d)[1:n.comp,1:n.comp]%*%t(dn$v[,1:n.comp])

i <- 6
C <- resl[[inds[i]]]$C #nrow(rate.svd)
#C <- consensus
E <- resl[[inds[i]]]$E
H <- do.call(rbind,lapply( 1:10000,function(i){
  #ft <- lm( rate.svd[i,] ~ C - 1)
  ft <- lm( rate.norm[i,] ~ C - 1)
  ft$coefficients
}))
par(mfrow=c(2,1))
plot(1:ncol(H),colMeans(H>0),pch=19,cex=1,ylim=c(0,1))
abline(h=0.5,col="red")
plot(1:ncol(H),colMeans(H),pch=19,cex=1)#,ylim=c(0,1))
abline(h=0,col="red")
which(colMeans(H>0) < 0.5)
which(colMeans(H) < 0)
spacemut::draw.signature(C[,12])

direction <- do.call(rbind,mclapply(inds,function(ind){
  C <- resl[[ind]]$C #nrow(rate.svd)
  #C <- consensus
  E <- resl[[inds[i]]]$E
  smpl <- sample(nrow(rate.norm),10000)
  H <- do.call(rbind,lapply( smpl,function(i){
    #ft <- lm( rate.svd[i,] ~ C - 1)
    ft <- lm( rate.norm[i,] ~ C - 1)
    ft$coefficients
  }))
  #which(colMeans(H>0) < 0.5)
  as.numeric(colMeans(H) < 0)
},mc.cores = 20))

E1 <- E
E1[E1 > 0] <- E1[E1>0]/max(E1[E1>0])
E1[E1 < 0] <- E1[E1<0]/max(abs(E1[E1<0]))
par(mfrow=c(1,1)); 
heatmap.2(E)
image( E,axes=FALSE,names=TRUE,
       #col=adjustcolor( colorRampPalette(c("blue","grey95","darkred"))(n = 60) ,1),
       #col=adjustcolor( colorRampPalette(c("blue","grey95","darkred"))(50)[as.integer(cut(as.numeric(E),50))] ,1),
       xlab="spectrum",ylab="rev. compl",cex.lab=1.5,
       main=paste("Top",i),font.main=1,cex.main=1.5)
as.integer(cut(as.numeric(E),10))
breaks(E,)

res <- AnchorFree(P0,n.comp = 14,init=NULL,init.type="Epos",n.iter=3)
sum(res$E > 0)/length(res$E)
C <- res$C
rownames(C) <- colnames(rate.new)
mat <- cor(C[,],C[xcompl,])
par(mfrow=c(1,1))
image( abs(mat)[1:ncol(C),1:ncol(C)],axes=FALSE,names=TRUE,
       col=adjustcolor( colorRampPalette(c("grey80","grey70","darkred"))(n = 60) ,1),
       xlab="spectrum",ylab="rev. compl",cex.lab=1.5,
       main=paste("Top",i),font.main=1,cex.main=1.5)

st <- as.data.frame(do.call(rbind,lapply(resl,function(res){
  C <- res$C
  mat <- cor(C[,],C[xcompl,])
  acor <- apply(abs(mat),1,max)
  c(res$detM,sum(acor > 0.95),sum(acor > 0.85),sum(acor > 0.75),sum(res$E > 0)/nrow(res$E)/ncol(res$E) )
})))
#frac <- unlist(lapply(resl,function(res){ sum(res$E > 0)/nrow(res$E)/ncol(res$E) }))

png("/d0/home/solrust/mutations/volume/anchorfree_optima_stat.png",width = 300,height = 300)
par(mfrow=c(1,1),mar=c(4,4,1,1))
plot(st[,3], log(abs(st[,1])),pch=19,cex=1,col=adjustcolor("black",0.01),
     xlab="reflected components, cor>0.85",ylab="log volume",cex.lab=1.5)
legend("bottomright",paste("r=",as.character(round(cor(abs(st[,1]),st[,3]),2))),cex=1.5,bty="n" )
dev.off()

par(mfrow=c(1,1),mar=c(4,4,1,1))
plot(st[,3], ((st[,5])),pch=19,cex=1,col=adjustcolor("black",1),
     xlab="reflected components, cor>0.85",ylab="log volume",cex.lab=1.5)
legend("bottomright",paste("r=",as.character(round(cor(abs(st[,5]),st[,3]),2))),cex=1.5,bty="n" )

png("/d0/home/solrust/mutations/volume/anchorfree_reflection_top.png",width = 300,height = 300)
par(mfrow=c(2,2),mar=c(3,3,2,2),mgp=c(0.5,1,0))
for (i in 1:4){
  j <- order(-abs(st[,3]))[i]
  C <- resl[[j]]$C
  mat <- cor(C[,],C[xcompl,])
  image( abs(mat)[1:ncol(C),1:ncol(C)],axes=FALSE,names=TRUE,
         col=adjustcolor( colorRampPalette(c("grey80","grey70","darkred"))(n = 60) ,1),
         xlab="spectrum",ylab="rev. compl",cex.lab=1.5,
         main=paste("Top",i),font.main=1,cex.main=1.5)
}
dev.off()

j <- order(-abs(st[,3]))[2]
C <- resl[[j]]$C
png("/d0/home/solrust/mutations/volume/anchorfree_spectra_example_12.png",width = 300,height = 300)
spacemut::draw.signature(C[,14])
dev.off()


inds <- order(-abs(st[,3]))[1:58]
table(st[inds,3])
Cmeta <- do.call(cbind,lapply(inds,function(ind) resl[[ind]]$C ))
batch <- unlist(lapply(inds,function(ind) rep(ind,14)  ))
index <- unlist(lapply(inds,function(ind) 1:14  ))
refl <- unlist(lapply(inds,function(ind) {
  C <- resl[[ind]]$C
  mat <- cor(C[,],C[xcompl,])
  acor <- apply(abs(mat),1,max)
  as.numeric(acor > 0.85)
}))

dst <- 1-cor(Cmeta,Cmeta); dst <- as.dist(dst)
dst <- dist(t(Cmeta))
tsn <- Rtsne::Rtsne(dst,perplexity=40)
hcl <- hclust(dst,method="ward")
cl <- cutree(hcl,15)
par(mfrow=c(2,2),mar=c(3,3,2,0.5))
plot(tsn$Y,cex=1,pch=19,col=adjustcolor(as.factor(cl),0.1),xlab="tSNE 1",ylab="tSNE 2",main="Clusters of spectra")
cl.coord <- do.call(rbind,lapply(1:14,function(i) colMeans(tsn$Y[cl==i,1:2]) ))
text(cl.coord,as.character(1:14),cex=1.5)
plot(tsn$Y,cex=1,pch=19,col=adjustcolor(batch,0.1),xlab="tSNE 1",ylab="tSNE 2",main="Initializations")
plot(tsn$Y,cex=1,pch=19,col=adjustcolor(as.numeric(t(direction))+1,0.5),xlab="tSNE 1",ylab="tSNE 2",main="Direction")
direction
#plot(tsn$Y,cex=0.2,pch=19,col=as.factor(refl),xlab="tSNE 1",ylab="tSNE 2")
#table(cl)/55
table(cl)

spacemut::draw.signature(consensus[,12])


consensus <- do.call(cbind,lapply(1:14,function(ind){
  ii <- batch[cl==ind]
  jj <- index[cl==ind]
  xx <- do.call(rbind,lapply(1:length(ii),function(i) resl[[ii[i]]]$C[,jj[i]] ))
  yy <- apply(xx,2,mean)
  yy
}))
mat <- cor(consensus[,],consensus[xcompl,])
par(mfrow=c(1,1))
image( abs(mat)[1:ncol(consensus),1:ncol(consensus)],axes=FALSE,names=TRUE,
       col=adjustcolor( colorRampPalette(c("grey80","grey70","darkred"))(n = 60) ,1),
       xlab="spectrum",ylab="rev. compl",cex.lab=1.5,
       main=paste("consensus"),font.main=1,cex.main=1.5)

init.type <- "ica.pos"
res.ica.pos <- AnchorFree(P0,n.comp = 14,init=NULL,init.type=init.type,n.iter=30)

par(mfrow=c(1,2))
mat <- cor(res.ica.pos$C[,],res.ica.pos$C[xcompl,])
image( abs(mat)[1:ncol(consensus),1:ncol(consensus)],axes=FALSE,names=TRUE,
       col=adjustcolor( colorRampPalette(c("grey80","grey70","darkred"))(n = 60) ,1),
       xlab="spectrum",ylab="rev. compl",cex.lab=1.5,
       main=paste("ICA pos init"),font.main=1,cex.main=1.5)
mat <- cor(res.ica.pos$C[,],consensus[xcompl,])
image( abs(mat)[1:ncol(consensus),1:ncol(consensus)],axes=FALSE,names=TRUE,
       col=adjustcolor( colorRampPalette(c("grey80","grey70","darkred"))(n = 60) ,1),
       xlab="ica init",ylab="consensus",cex.lab=1.5,
       main=paste("ICA pos vs cons"),font.main=1,cex.main=1.5)


ind <- 4
ii <- batch[cl==ind]
jj <- index[cl==ind]
xx <- do.call(rbind,lapply(1:length(ii),function(i) resl[[ii[i]]]$C[,jj[i]] ))
yy <- apply(xx,2,mean)
spacemut::draw.signature(yy)

ind <- 12
ind1 <- 17
i <- batch[cl==ind][ind1]
j <- index[cl==ind][ind1]
spacemut::draw.signature(resl[[i]]$C[,j])

#Csign <- Cmeta[,cl==ind]
#Csign <- t(apply(Csign,1,function(x) (x-mean(x))/sd(x) ))
dst.comp <- dist(t(Cmeta[,cl==ind]))
dst.comp <- dist(t(Csign))
tsn.comp <- Rtsne::Rtsne(dst.comp,perplexity=5)
hcl.comp <- hclust(dst.comp,method="ward")
n.clust <- 6
cl.comp <- cutree(hcl.comp,n.clust)
par(mfrow=c(1,1),mar=c(3,3,2,0.5))
plot(tsn.comp$Y,cex=1,pch=19,col=adjustcolor(as.factor(cl.comp),0.5),xlab="tSNE 1",ylab="tSNE 2",main="Clusters of spectra")
cl.coord <- do.call(rbind,lapply(1:n.clust,function(i) colMeans(tsn.comp$Y[cl.comp==i,1:2]) ))
text(cl.coord,as.character(1:n.clust),cex=2)

cl.ind <- 3
ind1 <- which(cl.comp==cl.ind)[1]
i <- batch[cl==ind][ind1]
j <- index[cl==ind][ind1]
#spacemut::draw.signature(Csign[,ind1])
spacemut::draw.signature(resl[[i]]$C[,j])



i <- 7
#C1 <- consensus[]#resl[[inds[1]]]$C
C2 <- resl[[inds[i]]]$C
ft <- lm(C2 ~ consensus - 1)
trans <- ft$coefficients
#trans <- trans.list[[5]]
rownames(trans) <- colnames(trans) <- as.character(1:14)
par(mfrow=c(1,1),mar=c(4,4,2,0.5))
image( abs(trans),axes=FALSE,names=TRUE,
       col=adjustcolor( colorRampPalette(c("grey95","grey90","darkred"))(n = 60) ,1),
       xlab="C1",ylab="C2",cex.lab=1,
       main=paste("transformation",i),font.main=1,cex.main=1.5)
box(lwd=2)
axis(1, at=seq(0,1, length=14), labels=1:14);axis(2, at=seq(0,1, length=14), labels=1:14)
#apply(trans,1,max)
#sum(apply(trans,1,max)>0.9)

trans.list <- lapply(inds,function(j){
  C1 <- consensus[,]#resl[[inds[1]]]$C
  C2 <- resl[[j]]$C
  ft <- lm(C2 ~ C1 - 1)
  trans <- ft$coefficients
  return(trans)
})

affinities <- lapply(1:15,function(cl.ind){
  do.call(rbind,lapply(1:length(which(cl==cl.ind)),function(ind1){
    #print(c(cl.ind,ind1))
    #ind1 <- which(cl==cl.ind)[5]
    i <- batch[cl==cl.ind][ind1]
    j <- index[cl==cl.ind][ind1]
    #cor(consensus[,cl.ind], resl[[i]]$C[,j])
    ft <- lm(resl[[i]]$C[,j] ~ consensus - 1)
    return(ft$coefficients)
  }))
})

par(mfrow=c(1,1),mar=c(4,4,2,0.5))
image( affinities[[15]],axes=FALSE,names=TRUE,
       col=adjustcolor( colorRampPalette(c("blue","grey95","grey90","darkred"))(n = 60) ,1),
       xlab="C1",ylab="C2",cex.lab=1,
       main=paste("transformation",i),font.main=1,cex.main=1.5)








corr <- matrix(0,nrow = 14,ncol = 14)
for(i in 1:14){
  for (j in 1:14){
    #( t(trans.list[[1]])[,],t(trans.list[[1]])[,])
    xx <- do.call(rbind,lapply(1:length(trans.list),function(k){t(trans.list[[k]][c(i,j),])}))
    corr[i,j] <- cor(abs(xx[,1]),abs(xx[,2]))#,method="spearman")
    #corr[i,j] <- cor((xx[,1]),(xx[,2]))#,method="spearman")
  }
}
diag(corr) <- NA
par(mfrow=c(1,1),mar=c(4,4,2,0.5))
image( (corr),axes=FALSE,names=TRUE,
       col=adjustcolor( colorRampPalette(c("grey90","grey50","darkred"))(n = 60) ,1),
       xlab="consensus comps",ylab="consensus comps",cex.lab=1,
       main=paste("transformation coordination"),font.main=1,cex.main=1.5)
box(lwd=2)
axis(1, at=seq(0,1, length=14), labels=1:14);axis(2, at=seq(0,1, length=14), labels=1:14)

dst <- do.call(rbind,lapply(inds,function(i){
  unlist(lapply(inds,function(j){
    xx <- sqrt(sum((resl[[i]]$C^2-resl[[j]]$C^2)^2))
    #xx <- 1-cor(as.numeric(resl[[i]]$C),as.numeric(resl[[j]]$C))
    return(xx)
  }))
}))
tsne <- Rtsne::Rtsne(as.dist(dst),perplexity=2)
hcl <- hclust(as.dist(dst),method="ward")
n.type <- 3
cl <- cutree(hcl,n.type)
par(mfrow=c(1,1),mar=c(3,3,2,0.5))
plot(tsne$Y,cex=1,pch=19,col=adjustcolor(as.factor(cl),0.5),xlab="tSNE 1",ylab="tSNE 2",main="Clusters of spectra")
#cl.coord <- do.call(rbind,lapply(1:n.clust,function(i) colMeans(tsn.comp$Y[cl.comp==i,1:2]) ))
#text(cl.coord,as.character(1:n.clust),cex=2)





####################################### old #########################################

st <- as.data.frame(do.call(rbind,lapply(resl,function(res){
  #if(length(res) > 3){
  #  if (!is.null(res$detM)){
      c(res$detM,res$init.type)
  #  }
  #}
})))
st[,1]<-as.numeric(as.character(st[,1]))

range(abs(st[st[,2]=="ica",1]))
range(abs(st[st[,2]=="ica.pos",1]))
range(abs(st[st[,2]=="unif.pos",1]))
range(abs(st[st[,2]=="unif.both",1]))
range(abs(st[st[,2]=="normal",1]))

refl <- do.call(rbind,lapply(resl,function(res){
  C <- res$C
  mat <- cor(C[,],C[xcompl,])
  apply(abs(mat),1,max)
}))
which( apply(refl,1,function(x) sum(x>0.85) ) == 14 )

j <- order(-abs(st[,3]))[2]
#j <- 1
C <- resl[[j]]$C
#C <- res$C
mat <- cor(C[,],C[xcompl,])
#mat <- cor(C1,C)
par(mfrow=c(1,1))
image( abs(mat)[1:ncol(C),1:ncol(C)],axes=FALSE,names=TRUE,
       col=adjustcolor( colorRampPalette(c("grey80","grey70","darkred"))(n = 60) ,1),
       xlab="spectrum",ylab="reverse complementary\nspectrum",cex.lab=2,
       main="",font.main=1,cex.main=1.5)

spacemut::draw.signature(C[,14])
apply(abs(mat),1,max)



Ccov <- solve(t(C)%*%C)
E <- Ccov%*%(t(C)%*%Pclean%*%C)%*%Ccov
Ppred <- C%*%E%*%t(C)
str(Ppred)
str(Pclean)

rownames(C) <- colnames(rate.new)
icM <- C

ic <- ica::icafast((B), nc = n.comp, fun = fun)
icM <- t(t(ic$S) + (t(solve(t(ic$M))) %*% apply(B, 2, mean))[,1])
rownames(icM) <- colnames(t)
icS <- t(ic$M)
sgn <- (apply(icM,2,function(x) sign(sum(x^2*sign(x))) ))
icM <- t(t(icM)*sgn); icS <- icS*sgn
str(icM%*%icS); str(B)
#icS <- (wh$u[, 1:n.comp] %*% diag(wh$d)[1:n.comp, 1:n.comp] %*% 
#          ic$M)
#icM <- B; rownames(icM) <- colnames(rate.new)

icM <- dimr$u
rownames(icM) <- colnames(rate.new)
mat <- cor(icM,icM[xcompl,])
par(mfrow=c(1,1))
image( abs(mat)[1:n.comp,1:n.comp],axes=FALSE,names=TRUE,
       col=adjustcolor( colorRampPalette(c("grey80","grey70","darkred"))(n = 60) ,1),
       xlab="spectrum",ylab="reverse complementary\nspectrum",cex.lab=2,
       main="",font.main=1,cex.main=1.5)
box(lwd=2)

spacemut::draw.signature(icM[,14])


#rate.norm <- t(apply(rate.new,1,function(x) x/sum(x) ))
rate.norm <- (apply(rate.new,2,function(x) (x)/sum(x) ))
P.center <- t(as.matrix(rate.norm))%*%as.matrix(rate.norm)
dim(P.center)

wh <- svd(P.center)
#wh <- svd(rate.norm)
icM <- wh$v
rownames(icM) <- colnames(rate.new)

mat <- cor(icM,icM[xcompl,])
par(mfrow=c(1,1))
image( abs(mat)[1:19,1:19],axes=FALSE,names=TRUE,col=adjustcolor( colorRampPalette(c("grey95","grey80","grey70","darkred"))(n = 60) ,1),
       xlab="spectrum",ylab="reverse complementary\nspectrum",cex.lab=2,
       main=nm,font.main=1,cex.main=1.5)
box(lwd=2)

spacemut::draw.signature(icM[,15])

